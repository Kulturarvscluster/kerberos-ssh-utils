#!/usr/bin/env bash

# disable the default virtualenv prompt change, as we use our own
export VIRTUAL_ENV_DISABLE_PROMPT=1


PROMPT_COMMAND=__prompt_command # Func to gen PS1 after CMDs

__prompt_command() {
    local EXIT="$?"             # This needs to be first
    PS1=""

    local RESET="\[\017\]"
    local NORMAL="\[\033[0m\]"
    local RED="\[\033[31;1m\]"
    local YELLOW="\[\033[33;1m\]"
    local WHITE="\[\033[37;1m\]"
    local GREEN="\[\033[01;32m\]"
    local BLUE="\[\033[01;34m\]"

    if [ $EXIT == 0 ]; then
        PS1+="${YELLOW}:)${NORMAL} "
    else
        PS1+="${RED}:(${NORMAL} "
    fi

    local kerberos="$( (klist 2>/dev/null || echo '') | grep -oP 'principal: \K\w+')"
    if [ -n "${kerberos}" ]; then
        PS1+="(krb:$kerberos) "
    fi

    #Include the virtualenv in the prompt
    if [ -n "$VIRTUAL_ENV" ]; then
        PS1+="(venv:${VIRTUAL_ENV##*/}) "
    fi

    #User, host, workingDir
    PS1+="$GREEN\u@\h$NORMAL:$BLUE\w$NORMAL\$ "
}

#Switch between kerberos accounts
function switch_user(){
    local newUser="$1"
    local globalTicket="/tmp/krb5cc_$UID"
    if [ -n "$newUser" ]; then
        local userTicket="/tmp/${newUser}_kac.ticket"
        klist -c "${userTicket}" -s || /usr/bin/kinit -c "${userTicket}" "${newUser}@KAC.SBLOKALNET"
        rm -f -- "$globalTicket"
        ln -s -- "${userTicket}" "$globalTicket"
    else
        rm -f -- "$globalTicket"
    fi
}

#autocomplete for logged in users
function _switch_user()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="$(cd /tmp/ && ls -- *.ticket 2>/dev/null | sed 's/_kac\.ticket//g')"

    if [ "$COMP_CWORD" -eq 1 ] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi
}
complete -F _switch_user switch_user


function _log_debug(){
    local message="$@"
    echo " -> $message" >&2
    return 0;
}


function ssh() {
(   #Subshell to handle exit correctly with the exec statements

    #Find the kac host
    local userHost=$(echo -e -- "$@" | grep -o "[^ ]*kac-[^ ]*" )

    #If kac host not found, just ssh
    if [ -z "$userHost" ];then
        local cmd="/usr/bin/ssh $*"
        _log_debug ${cmd}
        exec ${cmd}
    fi

    local lUser=$(echo -e "$@" | grep -o '^.*kac-' | grep -o '\-l *[^ ]\+' | sed 's/^-l//g' | sed 's/ //g')
    local hostUser=$(echo $userHost | grep '@' | cut -d'@' -f1)
    local specifiedUser=${hostUser:-$lUser}

    #If no user is specified, get user from current kerberos ticket
    if [ -z "$specifiedUser" ]; then
        local kerberosUser=$( (klist 2>/dev/null || echo "") | grep -oP 'principal: \K\w+' )
        if [ -n "$kerberosUser" ]; then
            # If the kerberos ticket specify a user, SSH as him
            local cmd="/usr/bin/ssh -l "${kerberosUser}" $*"
            _log_debug ${cmd}
            exec ${cmd}
        fi
    fi

    #Fallback to local user if nothing is specified
    local user=${specifiedUser:-$USER}

    #Cut the host part of the url
    local host=$(echo $userHost | cut -d'@' -f2)

    #Do not do kerberos tricks if logging in as root
    if [ "$user" == "root" ]; then
        local cmd="/usr/bin/ssh $*"
        _log_debug ${cmd}
        exec ${cmd}
    fi

    userTicket="/tmp/${user}_kac.ticket"

    local cmd="/usr/bin/klist -s -c -- ${userTicket}"
    _log_debug ${cmd}
    eval ${cmd} || (
        local cmd="/usr/bin/kinit -c ${userTicket} -- ${user}@KAC.SBLOKALNET"
        _log_debug ${cmd}
        eval ${cmd}
    )

    local cmd="env KRB5CCNAME=$userTicket /usr/bin/ssh -l ${user} $*"
    _log_debug ${cmd}
    exec ${cmd}
)}
export ssh



